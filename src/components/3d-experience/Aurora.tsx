/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import { AdditiveBlending, ShaderMaterial } from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { extend, useFrame } from '@react-three/fiber';
import { AuroraMaterial } from '@shader/aurora/material';

type GLTFResult = GLTF & {
  nodes: {
    aurora1: THREE.Mesh;
    aurora2: THREE.Mesh;
    aurora3: THREE.Mesh;
    aurora4: THREE.Mesh;
  };
  materials: {};
};

extend({ AuroraMaterial: AuroraMaterial });

export default function Aurora(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('/aurora.glb') as GLTFResult;
  const ref1 = useRef<ShaderMaterial & { [key: string]: any }>(null!);
  const ref2 = useRef<ShaderMaterial & { [key: string]: any }>(null!);
  const ref3 = useRef<ShaderMaterial & { [key: string]: any }>(null!);

  useFrame(({ clock }) => {
    const elapsedTime = clock.getElapsedTime();

    ref1.current.uTime = elapsedTime;
    ref2.current.uTime = elapsedTime;
    ref3.current.uTime = elapsedTime;

    const op = 1.5;

    ref1.current.uOpacity = (0.3 * Math.sin(0.2 + 0.5 * elapsedTime) + 0.7) * 0.12 * op;
    ref2.current.uOpacity = (0.3 * Math.sin(0.6 + 0.5 * elapsedTime) + 0.7) * 0.23 * op;
    ref3.current.uOpacity = (0.3 * Math.sin(0.4 + 0.5 * elapsedTime) + 0.7) * 0.3 * op;
  });

  return (
    <group {...props} position={[0, -0.3, 3.2]} scale={0.4} renderOrder={1}>
      <mesh geometry={nodes.aurora1.geometry}>
        <auroraMaterial
          ref={ref1}
          attach="material"
          blending={AdditiveBlending}
          depthWrite={false}
          uColorA={'#2e90ff'}
          uColorB={'#14f86f'}
          uColorMix={1}
          uSpeed={0.3}
          uNoiseScale={1.8}
          uVerticesRandomFactor={[0, 0.3, 0]}
          uOpacity={1}
        />
      </mesh>
      <mesh geometry={nodes.aurora2.geometry}>
        <auroraMaterial
          ref={ref2}
          attach="material"
          blending={AdditiveBlending}
          depthWrite={false}
          uColorA={'#4293ef'}
          uColorB={'#56ff07'}
          uColorMix={1}
          uSpeed={0.4}
          uNoiseScale={2.2}
          uVerticesRandomFactor={[0, 0.05, 0]}
          uOpacity={1}
        />
      </mesh>
      <mesh geometry={nodes.aurora3.geometry}>
        <auroraMaterial
          ref={ref3}
          attach="material"
          blending={AdditiveBlending}
          depthWrite={false}
          uColorA={'#2e90ff'}
          uColorB={'#0cfa5c'}
          uColorMix={1}
          uSpeed={0.3}
          uNoiseScale={3.1}
          uVerticesRandomFactor={[0, 0.04, 0]}
          uOpacity={1}
        />
      </mesh>
    </group>
  );
}
